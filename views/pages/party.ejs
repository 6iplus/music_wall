<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">
	<title><%=party.partyName%></title>
	<script src="//code.jquery.com/jquery-1.12.0.js"></script>
  <script src="/socket.io/socket.io.js"></script>
  <script src="/assets/js/danmu.js"></script>
  <!--<link rel="stylesheet" href="/assets/css/style_danmu.css">-->
  <style>
    body{
      margin: 0;
      padding: 0;
    }
    #playlist{
      background: black;
      color: white;
      width: 10%;
      float: right;
      height: 100%;
    }
    #theplayer{
      width: 90%;
      background:black;
      float: left;
      height: 100%;
    }
    .container{
      height: 100%;
      width:100%;
      position: relative;
      overflow: hidden;
    }

  </style>
</head>
  <body>


    <div id="container" class="container">
          <div id="theplayer">
            <div id="player"></div>
          </div>
          <div id="playlist">

						<ul id="playlist_ul">

            </ul>
          </div>
    </div>

<script src="https://code.jquery.com/jquery-2.2.2.min.js" integrity="sha256-36cp2Co+/62rEAAYHLmRCPIych47CvdM+uTBJwSzWjI=" crossorigin="anonymous"></script>
    <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->


    <script>
      	√çfunction resizeAll(){
        var myheight = $('#theplayer').css('height');
        $('#container').css('height', myheight);
        $('#player').css('height', '100%');
        $('#player').css('width', '100%');
      }
       playList = <%-videoInfos%>;// this is an array of video ids
			 for(var i =0; i< playList.length; i++){
				 	$('#playlist_ul').append('<li>'+ playList[i].videoTitle+'</li>');
			 }

			 var socket = io();
			 // let's assume that the client page, once rendered, knows what room it wants to join
			 socket.on('playlist', function(msg){

			 var comeMessage = msg;
			 for(var i =0; i< comeMessage.length; i++){
				 	$('#playlist_ul').append('<li>'+ comeMessage[i].title+'</li>');
			 }
			 var noPreviousVideo = false;
			 if(playList.length == 0){
					noPreviousVideo	 = true;
			 }
			 for(var i=0; i<comeMessage.length; i++){
					 playList.push( comeMessage[i].videoId);
			 }
					if(noPreviousVideo) playNextVideo();
			 });
			 curIndex = 0;

      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '640',
          width: '800',
          videoId: '',
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
        playNextVideo();
              $( window ).resize(function() {
                resizeAll();
              });
              resizeAll();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.ENDED) {
          //setTimeout(stopVideo, 6000);
          console.log(event.data);
           //cue next
           playNextVideo();
        }
      }
      function stopVideo() {
        player.stopVideo();
      }

      function playNextVideo(){
        if(playList.length ==0) return;
         var videoId = playList[curIndex];
          console.log(playList);
          curIndex++;
          console.log(videoId);
          player.loadVideoById(videoId);
      }

      // var intervalID = window.setInterval(myCallback, 5000);
      // function myCallback() {
      // $.ajax({
      //     url: "http://localhost:3000/party/<%=party.partyId%>/playList",
      //     jsonp: "callback",
      //     dataType: "jsonp",
      //     data: {
      //         partyId: "",
      //         format: "json"
      //     },
      //     success: function( response ) {
      //         //console.log( response.songs ); // server response
      //        $.each( response.songs, function( key, val ) {
      //            if(playList.indexOf(val)==-1){
      //                playList.push(val);
      //            }
      //           //console.log(playList);
      //        });
      //     }
      // });
			//
      // }
  </script>
  </body>
</html>
